1. Which tag has the following text? - Automatically remove the container when it exits
Ans: --rm
2. What is version of the package wheel?
Ans: 0.42.0


 docker --help

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., 0.12.1-1)
  compose*    Docker Compose (Docker Inc., 2.23.3-1)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/home/vscode/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with
                           "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/vscode/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/vscode/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/vscode/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/
 
 docker build --help

Usage:  docker buildx build [OPTIONS] PATH | URL | -

Start a build

Aliases:
  docker buildx build, docker buildx b

Options:
      --add-host strings              Add a custom host-to-IP mapping (format: "host:ip")
      --allow strings                 Allow extra privileged entitlement (e.g., "network.host", "security.insecure")
      --annotation stringArray        Add annotation to the image
      --attest stringArray            Attestation parameters (format: "type=sbom,generator=image")
      --build-arg stringArray         Set build-time variables
      --build-context stringArray     Additional build contexts (e.g., name=path)
      --builder string                Override the configured builder instance (default "default")
      --cache-from stringArray        External cache sources (e.g., "user/app:cache", "type=local,src=path/to/dir")
      --cache-to stringArray          Cache export destinations (e.g., "user/app:cache", "type=local,dest=path/to/dir")
      --cgroup-parent string          Set the parent cgroup for the "RUN" instructions during build
  -f, --file string                   Name of the Dockerfile (default: "PATH/Dockerfile")
      --iidfile string                Write the image ID to the file
      --label stringArray             Set metadata for an image
      --load                          Shorthand for "--output=type=docker"
      --metadata-file string          Write build result metadata to the file
      --network string                Set the networking mode for the "RUN" instructions during build (default "default")
      --no-cache                      Do not use cache when building the image
      --no-cache-filter stringArray   Do not cache specified stages
  -o, --output stringArray            Output destination (format: "type=local,dest=path")
      --platform stringArray          Set target platform for build
      --progress string               Set type of progress output ("auto", "plain", "tty"). Use plain to show container output (default "auto")
      --provenance string             Shorthand for "--attest=type=provenance"
      --pull                          Always attempt to pull all referenced images
      --push                          Shorthand for "--output=type=registry"
  -q, --quiet                         Suppress the build output and print image ID on success
      --sbom string                   Shorthand for "--attest=type=sbom"
      --secret stringArray            Secret to expose to the build (format: "id=mysecret[,src=/local/secret]")
      --shm-size bytes                Size of "/dev/shm"
      --ssh stringArray               SSH agent socket or keys to expose to the build (format: "default|<id>[=<socket>|<key>[,<key>]]")
  -t, --tag stringArray               Name and optionally a tag (format: "name:tag")
      --target string                 Set the target build stage to build
      --ulimit ulimit                 Ulimit options (default [])
 
 docker run --help

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Create and run a new container from an image

Aliases:
  docker container run, docker run

Options:
      --add-host list                  Add a custom host-to-IP mapping (host:ip)
      --annotation map                 Add an annotation to the container (passed through to the OCI runtime) (default map[])
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the container
      --cgroupns string                Cgroup namespace to use (host|private)
                                       'host':    Run the container in the Docker host's cgroup namespace
                                       'private': Run the container in its own private cgroup namespace
                                       '':        Use the cgroup namespace as configured by the
                                                  default-cgroupns-mode option on the daemon (default)
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution (0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution (0-3, 0,1)
  -d, --detach                         Run container in background and print container ID
      --detach-keys string             Override the key sequence for detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed devices list
      --device-read-bps list           Limit read rate (bytes per second) from a device (default [])
      --device-read-iops list          Limit read rate (IO per second) from a device (default [])
      --device-write-bps list          Limit write rate (bytes per second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second) to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --domainname string              Container NIS domain name
      --entrypoint string              Overwrite the default ENTRYPOINT of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --gpus gpu-request               GPU devices to add to the container ('all' to pass all GPUs)
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to report unhealthy
      --health-start-period duration   Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container that forwards signals and reaps processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g., 92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the container
      --name string                    Assign a name to the container
      --network network                Connect a container to a network
      --network-alias list             Add network-scoped alias for the container
      --no-healthcheck                 Disable any container-specified HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000 to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1 for unlimited)
      --platform string                Set platform if server is multi-platform capable
      --privileged                     Give extended privileges to this container
  -p, --publish list                   Publish a container's port(s) to the host
  -P, --publish-all                    Publish all exposed ports to random ports
      --pull string                    Pull image before running ("always", "missing", "never") (default "missing")
  -q, --quiet                          Suppress the pull output
      --read-only                      Mount the container's root filesystem as read only
      --restart string                 Restart policy to apply when a container exits (default "no")
      --rm                             Automatically remove the container when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the process (default true)
      --stop-signal string             Signal to stop the container
      --stop-timeout int               Timeout (in seconds) to stop a container
      --storage-opt list               Storage driver options for the container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format: <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the container
      --volumes-from list              Mount volumes from the specified container(s)
  -w, --workdir string                 Working directory inside the container
 docker delete --help

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., 0.12.1-1)
  compose*    Docker Compose (Docker Inc., 2.23.3-1)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/home/vscode/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with "docker
                           context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/vscode/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/vscode/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/vscode/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/
 docker run --help

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Create and run a new container from an image

Aliases:
  docker container run, docker run

Options:
      --add-host list                  Add a custom host-to-IP mapping (host:ip)
      --annotation map                 Add an annotation to the container (passed through to the OCI runtime) (default map[])
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the container
      --cgroupns string                Cgroup namespace to use (host|private)
                                       'host':    Run the container in the Docker host's cgroup namespace
                                       'private': Run the container in its own private cgroup namespace
                                       '':        Use the cgroup namespace as configured by the
                                                  default-cgroupns-mode option on the daemon (default)
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution (0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution (0-3, 0,1)
  -d, --detach                         Run container in background and print container ID
      --detach-keys string             Override the key sequence for detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed devices list
      --device-read-bps list           Limit read rate (bytes per second) from a device (default [])
      --device-read-iops list          Limit read rate (IO per second) from a device (default [])
      --device-write-bps list          Limit write rate (bytes per second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second) to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --domainname string              Container NIS domain name
      --entrypoint string              Overwrite the default ENTRYPOINT of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --gpus gpu-request               GPU devices to add to the container ('all' to pass all GPUs)
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to report unhealthy
      --health-start-period duration   Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container that forwards signals and reaps processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g., 92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the container
      --name string                    Assign a name to the container
      --network network                Connect a container to a network
      --network-alias list             Add network-scoped alias for the container
      --no-healthcheck                 Disable any container-specified HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000 to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1 for unlimited)
      --platform string                Set platform if server is multi-platform capable
      --privileged                     Give extended privileges to this container
  -p, --publish list                   Publish a container's port(s) to the host
  -P, --publish-all                    Publish all exposed ports to random ports
      --pull string                    Pull image before running ("always", "missing", "never") (default "missing")
  -q, --quiet                          Suppress the pull output
      --read-only                      Mount the container's root filesystem as read only
      --restart string                 Restart policy to apply when a container exits (default "no")
      --rm                             Automatically remove the container when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the process (default true)
      --stop-signal string             Signal to stop the container
      --stop-timeout int               Timeout (in seconds) to stop a container
      --storage-opt list               Storage driver options for the container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format: <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the container
      --volumes-from list              Mount volumes from the specified container(s)
  -w, --workdir string                 Working directory inside the container
 pip list
Package                       Version
----------------------------- ------------
agate                         1.7.1
aiosqlite                     0.19.0
alembic                       1.13.1
annotated-types               0.6.0
anyio                         4.2.0
apprise                       1.7.1
asgi-lifespan                 2.1.0
asttokens                     2.4.1
async-timeout                 4.0.3
asyncpg                       0.29.0
attrs                         23.2.0
Babel                         2.14.0
cachetools                    5.3.2
certifi                       2023.11.17
cffi                          1.16.0
charset-normalizer            3.3.2
click                         8.1.7
cloudpickle                   3.0.0
colorama                      0.4.6
comm                          0.2.1
confluent-kafka               1.9.2
coolname                      2.2.0
croniter                      2.0.1
cryptography                  42.0.0
dateparser                    1.2.0
db-dtypes                     1.2.0
dbt-bigquery                  1.7.3
dbt-core                      1.7.5
dbt-extractor                 0.5.1
dbt-postgres                  1.7.5
dbt-semantic-interfaces       0.4.3
debugpy                       1.8.0
decorator                     5.1.1
docker                        7.0.0
exceptiongroup                1.2.0
executing                     2.0.1
fastapi                       0.109.0
fsspec                        2023.12.2
google-api-core               2.15.0
google-api-python-client      2.115.0
google-auth                   2.26.2
google-auth-httplib2          0.2.0
google-auth-oauthlib          1.2.0
google-cloud-bigquery         3.16.0
google-cloud-bigquery-storage 2.24.0
google-cloud-core             2.4.1
google-cloud-dataproc         5.8.0
google-cloud-storage          2.14.0
google-crc32c                 1.5.0
google-resumable-media        2.7.0
googleapis-common-protos      1.62.0
greenlet                      3.0.3
griffe                        0.39.1
grpc-google-iam-v1            0.13.0
grpcio                        1.60.0
grpcio-status                 1.60.0
h11                           0.14.0
h2                            4.1.0
hpack                         4.0.0
httpcore                      1.0.2
httplib2                      0.22.0
httpx                         0.26.0
hyperframe                    6.0.1
idna                          3.6
importlib-metadata            6.11.0
ipykernel                     6.29.0
ipython                       8.18.1
isodate                       0.6.1
jedi                          0.19.1
Jinja2                        3.1.3
jsonpatch                     1.33
jsonpointer                   2.4
jsonschema                    4.21.1
jsonschema-specifications     2023.12.1
jupyter_client                8.6.0
jupyter_core                  5.7.1
kubernetes                    29.0.0
leather                       0.3.4
Logbook                       1.5.3
Mako                          1.3.1
Markdown                      3.5.2
markdown-it-py                3.0.0
MarkupSafe                    2.1.4
mashumaro                     3.11
matplotlib-inline             0.1.6
mdurl                         0.1.2
minimal-snowplow-tracker      0.0.2
more-itertools                10.2.0
msgpack                       1.0.7
nest-asyncio                  1.6.0
networkx                      3.2.1
numpy                         1.26.3
oauthlib                      3.2.2
orjson                        3.9.12
packaging                     23.2
pandas                        1.5.2
pandas-gbq                    0.18.1
parsedatetime                 2.6
parso                         0.8.3
pathspec                      0.11.2
pendulum                      3.0.0
pexpect                       4.9.0
pip                           23.3.2
platformdirs                  4.1.0
polars                        0.20.5
prefect                       2.7.7
prefect-gcp                   0.2.4
prefect-sqlalchemy            0.2.2
prompt-toolkit                3.0.43
proto-plus                    1.23.0
protobuf                      4.25.2
psutil                        5.9.8
psycopg2-binary               2.9.5
ptyprocess                    0.7.0
pure-eval                     0.2.2
py4j                          0.10.9.7
pyarrow                       10.0.1
pyasn1                        0.5.1
pyasn1-modules                0.3.0
pycparser                     2.21
pydantic                      2.5.3
pydantic_core                 2.14.6
pydata-google-auth            1.8.2
Pygments                      2.17.2
pyparsing                     3.1.1
pyspark                       3.5.0
python-dateutil               2.8.2
python-slugify                8.0.1
pytimeparse                   1.1.8
pytz                          2023.3.post1
PyYAML                        6.0.1
pyzmq                         25.1.2
readchar                      4.0.5
referencing                   0.32.1
regex                         2023.12.25
requests                      2.31.0
requests-oauthlib             1.3.1
rich                          13.7.0
rpds-py                       0.17.1
rsa                           4.9
setuptools                    58.1.0
six                           1.16.0
sniffio                       1.3.0
SQLAlchemy                    1.4.46
sqlparse                      0.4.4
stack-data                    0.6.3
starlette                     0.35.1
text-unidecode                1.3
time-machine                  2.13.0
toml                          0.10.2
tornado                       6.4
traitlets                     5.14.1
typer                         0.9.0
typing_extensions             4.9.0
tzdata                        2023.4
tzlocal                       5.2
uritemplate                   4.1.1
urllib3                       1.26.18
uvicorn                       0.27.0
wcwidth                       0.2.13
websocket-client              1.7.0
zipp                          3.17.0
 docker run --help

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Create and run a new container from an image

Aliases:
  docker container run, docker run

Options:
      --add-host list                  Add a custom host-to-IP mapping (host:ip)
      --annotation map                 Add an annotation to the container (passed through to the OCI runtime) (default map[])
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the container
      --cgroupns string                Cgroup namespace to use (host|private)
                                       'host':    Run the container in the Docker host's cgroup namespace
                                       'private': Run the container in its own private cgroup namespace
                                       '':        Use the cgroup namespace as configured by the
                                                  default-cgroupns-mode option on the daemon (default)
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution (0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution (0-3, 0,1)
  -d, --detach                         Run container in background and print container ID
      --detach-keys string             Override the key sequence for detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed devices list
      --device-read-bps list           Limit read rate (bytes per second) from a device (default [])
      --device-read-iops list          Limit read rate (IO per second) from a device (default [])
      --device-write-bps list          Limit write rate (bytes per second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second) to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --domainname string              Container NIS domain name
      --entrypoint string              Overwrite the default ENTRYPOINT of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --gpus gpu-request               GPU devices to add to the container ('all' to pass all GPUs)
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to report unhealthy
      --health-start-period duration   Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container that forwards signals and reaps processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g., 92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the container
      --name string                    Assign a name to the container
      --network network                Connect a container to a network
      --network-alias list             Add network-scoped alias for the container
      --no-healthcheck                 Disable any container-specified HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000 to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1 for unlimited)
      --platform string                Set platform if server is multi-platform capable
      --privileged                     Give extended privileges to this container
  -p, --publish list                   Publish a container's port(s) to the host
  -P, --publish-all                    Publish all exposed ports to random ports
      --pull string                    Pull image before running ("always", "missing", "never") (default "missing")
  -q, --quiet                          Suppress the pull output
      --read-only                      Mount the container's root filesystem as read only
      --restart string                 Restart policy to apply when a container exits (default "no")
      --rm                             Automatically remove the container when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the process (default true)
      --stop-signal string             Signal to stop the container
      --stop-timeout int               Timeout (in seconds) to stop a container
      --storage-opt list               Storage driver options for the container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format: <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the container
      --volumes-from list              Mount volumes from the specified container(s)
  -w, --workdir string                 Working directory inside the container
 docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
 docker -it --help
unknown shorthand flag: 'i' in -it
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., 0.12.1-1)
  compose*    Docker Compose (Docker Inc., 2.23.3-1)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/home/vscode/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with "docker
                           context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/vscode/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/vscode/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/vscode/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

 docker run --rm -it --entrypoint bash python:3.9
Unable to find image 'python:3.9' locally
3.9: Pulling from library/python
1b13d4e1a46e: Pull complete 
1c74526957fc: Pull complete 
30d855997954: Pull complete 
ad5739181616: Pull complete 
75e2b45cbee5: Pull complete 
2085960a02e9: Pull complete 
5e8caa1d5d83: Pull complete 
0cd6f205cb3b: Pull complete 
Digest: sha256:3d9dbe78e1f45ed2eb525b462cdb02247cc0956713325aeeffa37cb5f2c8c42e
Status: Downloaded newer image for python:3.9
root@8c4affd30d97:/# pip list
Package    Version
---------- -------
pip        23.0.1
setuptools 58.1.0
wheel      0.42.0

[notice] A new release of pip is available: 23.0.1 -> 23.3.2
[notice] To update, run: pip install --upgrade pip
root@8c4affd30d97:/# pip install --upgrade pip
Requirement already satisfied: pip in /usr/local/lib/python3.9/site-packages (23.0.1)
Collecting pip
  Downloading pip-23.3.2-py3-none-any.whl (2.1 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.1/2.1 MB 34.5 MB/s eta 0:00:00
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 23.0.1
    Uninstalling pip-23.0.1:
      Successfully uninstalled pip-23.0.1
Successfully installed pip-23.3.2
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
root@8c4affd30d97:/# docker --help
bash: docker: command not found
root@8c4affd30d97:/# ctrl-p
bash: ctrl-p: command not found
root@8c4affd30d97:/# ^P^Q
bash: :s^P^Q: substitution failed
root@8c4affd30d97:/# ctrl-p ctrl-q
bash: ctrl-p: command not found
root@8c4affd30d97:/# ctrl-pctrl-q
bash: ctrl-pctrl-q: command not found
root@8c4affd30d97:/# ^p
ctrl-ctrl-q
bash: ctrl-ctrl-q: command not found
root@8c4affd30d97:/# ^P
bash: :s^P: substitution failed
root@8c4affd30d97:/# ^Q
bash: :s^Q: substitution failed
root@8c4affd30d97:/# CTRL-p CTRL-q
bash: CTRL-p: command not found
root@8c4affd30d97:/# docker ps
bash: docker: command not found
root@8c4affd30d97:/# 
 docker run --rm -itd --entrypoint bash python:3.9
c11ffc3af3c876401e0b708bffe978cc5dca97711208819b40fcecaff93ea99f
 docker ps
CONTAINER ID   IMAGE        COMMAND   CREATED          STATUS          PORTS     NAMES
c11ffc3af3c8   python:3.9   "bash"    21 seconds ago   Up 19 seconds             nifty_hugle
 docker attach --detach-keys="ctrl-a,ctrl-x" c11ffc3af3c8
root@c11ffc3af3c8:/# pip list
Package    Version
---------- -------
pip        23.0.1
setuptools 58.1.0
wheel      0.42.0

[notice] A new release of pip is available: 23.0.1 -> 23.3.2
[notice] To update, run: pip install --upgrade pip
root@c11ffc3af3c8:/# read escape sequence
 docker ps
CONTAINER ID   IMAGE        COMMAND   CREATED         STATUS         PORTS     NAMES
c11ffc3af3c8   python:3.9   "bash"    8 minutes ago   Up 8 minutes             nifty_hugle
 docker attach c11ffc3af3c8
root@c11ffc3af3c8:/# pip list
Package    Version
---------- -------
pip        23.0.1
setuptools 58.1.0
wheel      0.42.0

[notice] A new release of pip is available: 23.0.1 -> 23.3.2
[notice] To update, run: pip install --upgrade pip
root@c11ffc3af3c8:/# 
 docker run --rm -itd --entrypoint bash python:3.9
5bc54f861cbb5704c2d66b766fbc4e845fb21408fb266521994763927ce0d239
 docker ps
CONTAINER ID   IMAGE        COMMAND   CREATED          STATUS          PORTS     NAMES
5bc54f861cbb   python:3.9   "bash"    34 seconds ago   Up 33 seconds             angry_lovelace
 docker attach --detach-keys="ctrl-a,ctrl-x" 5bc54f861cbb
root@5bc54f861cbb:/# pip list
Package    Version
---------- -------
pip        23.0.1
setuptools 58.1.0
wheel      0.42.0

[notice] A new release of pip is available: 23.0.1 -> 23.3.2
[notice] To update, run: pip install --upgrade pip
root@5bc54f861cbb:/# read escape sequence
 docker attach --detach-keys="ctrl-a,ctrl-x" 5bc54f861cbb
root@5bc54f861cbb:/# print('hello worlds')
bash: syntax error near unexpected token `'hello worlds''
root@5bc54f861cbb:/# print('hello worlds')
bash: syntax error near unexpected token `'hello worlds''
root@5bc54f861cbb:/# print("hello worlds")
bash: syntax error near unexpected token `"hello worlds"'
root@5bc54f861cbb:/# print('hello worlds')
bash: syntax error near unexpected token `'hello worlds''
root@5bc54f861cbb:/# print(hello worlds)
bash: syntax error near unexpected token `hello'
root@5bc54f861cbb:/# "help"
GNU bash, version 5.2.15(1)-release (x86_64-pc-linux-gnu)
These shell commands are defined internally.  Type `help' to see this list.
Type `help name' to find out more about the function `name'.
Use `info bash' to find out more about the shell in general.
Use `man -k' or `info' to find out more about commands not in this list.

A star (*) next to a name means that the command is disabled.

 job_spec [&]                                                               history [-c] [-d offset] [n] or history -anrw [filename] or history -ps>
 (( expression ))                                                           if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ else>
 . filename [arguments]                                                     jobs [-lnprs] [jobspec ...] or jobs -x command [args]
 :                                                                          kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l [>
 [ arg... ]                                                                 let arg [arg ...]
 [[ expression ]]                                                           local [option] name[=value] ...
 alias [-p] [name[=value] ... ]                                             logout [n]
 bg [job_spec ...]                                                          mapfile [-d delim] [-n count] [-O origin] [-s count] [-t] [-u fd] [-C c>
 bind [-lpsvPSVX] [-m keymap] [-f filename] [-q name] [-u name] [-r keyse>  popd [-n] [+N | -N]
 break [n]                                                                  printf [-v var] format [arguments]
 builtin [shell-builtin [arg ...]]                                          pushd [-n] [+N | -N | dir]
 caller [expr]                                                              pwd [-LP]
 case WORD in [PATTERN [| PATTERN]...) COMMANDS ;;]... esac                 read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p>
 cd [-L|[-P [-e]] [-@]] [dir]                                               readarray [-d delim] [-n count] [-O origin] [-s count] [-t] [-u fd] [-C>
 command [-pVv] command [arg ...]                                           readonly [-aAf] [name[=value] ...] or readonly -p
 compgen [-abcdefgjksuv] [-o option] [-A action] [-G globpat] [-W wordlis>  return [n]
 complete [-abcdefgjksuv] [-pr] [-DEI] [-o option] [-A action] [-G globpa>  select NAME [in WORDS ... ;] do COMMANDS; done
 compopt [-o|+o option] [-DEI] [name ...]                                   set [-abefhkmnptuvxBCEHPT] [-o option-name] [--] [-] [arg ...]
 continue [n]                                                               shift [n]
 coproc [NAME] command [redirections]                                       shopt [-pqsu] [-o] [optname ...]
 declare [-aAfFgiIlnrtux] [name[=value] ...] or declare -p [-aAfFilnrtux]>  source filename [arguments]
 dirs [-clpv] [+N] [-N]                                                     suspend [-f]
 disown [-h] [-ar] [jobspec ... | pid ...]                                  test [expr]
 echo [-neE] [arg ...]                                                      time [-p] pipeline
 enable [-a] [-dnps] [-f filename] [name ...]                               times
 eval [arg ...]                                                             trap [-lp] [[arg] signal_spec ...]
 exec [-cl] [-a name] [command [argument ...]] [redirection ...]            true
 exit [n]                                                                   type [-afptP] name [name ...]
 export [-fn] [name[=value] ...] or export -p                               typeset [-aAfFgiIlnrtux] name[=value] ... or typeset -p [-aAfFilnrtux] >
 false                                                                      ulimit [-SHabcdefiklmnpqrstuvxPRT] [limit]
 fc [-e ename] [-lnr] [first] [last] or fc -s [pat=rep] [command]           umask [-p] [-S] [mode]
 fg [job_spec]                                                              unalias [-a] name [name ...]
 for NAME [in WORDS ... ] ; do COMMANDS; done                               unset [-f] [-v] [-n] [name ...]
 for (( exp1; exp2; exp3 )); do COMMANDS; done                              until COMMANDS; do COMMANDS-2; done
 function name { COMMANDS ; } or name () { COMMANDS ; }                     variables - Names and meanings of some shell variables
 getopts optstring name [arg ...]                                           wait [-fn] [-p var] [id ...]
 hash [-lr] [-p pathname] [-dt] [name ...]                                  while COMMANDS; do COMMANDS-2; done
 help [-dms] [pattern ...]                                                  { COMMANDS ; }
root@5bc54f861cbb:/# printf('hello worlds')
bash: syntax error near unexpected token `'hello worlds''
root@5bc54f861cbb:/# printf("hello worlds")
bash: syntax error near unexpected token `"hello worlds"'
root@5bc54f861cbb:/# pip list
Package    Version
---------- -------
pip        23.0.1
setuptools 58.1.0
wheel      0.42.0

[notice] A new release of pip is available: 23.0.1 -> 23.3.2
[notice] To update, run: pip install --upgrade pip
root@5bc54f861cbb:/# read escape sequence
 docker run -itd --entrypoint=bash python:3.9
bd61382231ed3cf0abf4ee9eacd301cf6c2bb73de774ff5f09aec6e1c419b485
 docker ps
CONTAINER ID   IMAGE        COMMAND   CREATED          STATUS          PORTS     NAMES
bd61382231ed   python:3.9   "bash"    17 seconds ago   Up 16 seconds             keen_hugle
5bc54f861cbb   python:3.9   "bash"    24 minutes ago   Up 24 minutes             angry_lovelace
 docker attach --detach-keys="ctrl-a,ctrl-x" bd61382231ed
root@bd61382231ed:/# pip list
Package    Version
---------- -------
pip        23.0.1
setuptools 58.1.0
wheel      0.42.0

[notice] A new release of pip is available: 23.0.1 -> 23.3.2
[notice] To update, run: pip install --upgrade pip
root@bd61382231ed:/# pip install pandas
Collecting pandas
  Downloading pandas-2.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 13.0/13.0 MB 46.9 MB/s eta 0:00:00
Collecting tzdata>=2022.7
  Downloading tzdata-2023.4-py2.py3-none-any.whl (346 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 346.6/346.6 kB 17.6 MB/s eta 0:00:00
Collecting pytz>=2020.1
  Downloading pytz-2023.3.post1-py2.py3-none-any.whl (502 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 502.5/502.5 kB 24.0 MB/s eta 0:00:00
Collecting numpy<2,>=1.22.4
  Downloading numpy-1.26.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 18.2/18.2 MB 51.0 MB/s eta 0:00:00
Collecting python-dateutil>=2.8.2
  Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 247.7/247.7 kB 15.0 MB/s eta 0:00:00
Collecting six>=1.5
  Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)
Installing collected packages: pytz, tzdata, six, numpy, python-dateutil, pandas
Successfully installed numpy-1.26.3 pandas-2.2.0 python-dateutil-2.8.2 pytz-2023.3.post1 six-1.16.0 tzdata-2023.4
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 23.3.2
[notice] To update, run: pip install --upgrade pip
root@bd61382231ed:/# python
Python 3.9.18 (main, Jan 17 2024, 07:02:31) 
[GCC 12.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> print("hello worlds")

  bash MEM: 19.91% | 1/7GB   0ms                                                                                                  main ≡  ?2 
╭─ ♥ 17:29 | workspaces  data-engineering-zoomcamp 
╰─ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

  bash MEM: 25.52% | 2/7GB   20ms                                                                                                 main ≡  ?2 
╭─ ♥ 17:31 | workspaces  data-engineering-zoomcamp 
╰─ docker run -itd --entrypoint=bash python:3.9
e69684e887f990bd1800fd3e31abe04e85086070a7c32c054ba446429fff6111

  bash MEM: 25.48% | 2/7GB   583ms                                                                                                main ≡  ?2 
╭─ ♥ 17:32 | workspaces  data-engineering-zoomcamp 
╰─ docker ps
CONTAINER ID   IMAGE        COMMAND   CREATED         STATUS         PORTS     NAMES
e69684e887f9   python:3.9   "bash"    6 seconds ago   Up 5 seconds             priceless_gould

  bash MEM: 25.58% | 2/7GB   21ms                                                                                                 main ≡  ?2 
╭─ ♥ 17:32 | workspaces  data-engineering-zoomcamp 
╰─ docker attach --detach-keys="ctrl-a,ctrl-x" e69684e887f9
root@e69684e887f9:/# python
Python 3.9.18 (main, Jan 17 2024, 07:02:31) 
[GCC 12.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> pip pgcli
  File "<stdin>", line 1
    pip pgcli
        ^
SyntaxError: invalid syntax
>>> read escape sequence

  bash MEM: 29.7% | 2/7GB   9m 23s 15ms                                                                                           main ≡  ?2 
╭─ ♥ 17:42 | workspaces  data-engineering-zoomcamp 
╰─ docker attach --detach-keys="ctrl-a,ctrl-x" e69684e887f9
>>> pyhton
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'pyhton' is not defined
>>> python
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'python' is not defined
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()
root@e69684e887f9:/# install pgcli
install: missing destination file operand after 'pgcli'
Try 'install --help' for more information.
root@e69684e887f9:/# pip install pgcli
Collecting pgcli
  Downloading pgcli-4.0.1-py3-none-any.whl (83 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 83.0/83.0 kB 3.3 MB/s eta 0:00:00
Collecting psycopg>=3.0.14
  Downloading psycopg-3.1.17-py3-none-any.whl (178 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 178.0/178.0 kB 9.7 MB/s eta 0:00:00
Collecting setproctitle>=1.1.9
  Downloading setproctitle-1.3.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30 kB)
Collecting sqlparse<0.5,>=0.3.0
  Downloading sqlparse-0.4.4-py3-none-any.whl (41 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 41.2/41.2 kB 2.4 MB/s eta 0:00:00
Collecting click>=4.1
  Downloading click-8.1.7-py3-none-any.whl (97 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 97.9/97.9 kB 5.9 MB/s eta 0:00:00
Collecting Pygments>=2.0
  Downloading pygments-2.17.2-py3-none-any.whl (1.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 36.5 MB/s eta 0:00:00
Collecting pgspecial>=2.0.0
  Downloading pgspecial-2.1.1-py3-none-any.whl (35 kB)
Collecting cli-helpers[styles]>=2.2.1
  Downloading cli_helpers-2.3.0-py3-none-any.whl (19 kB)
Collecting pendulum>=2.1.0
  Downloading pendulum-3.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (385 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 385.2/385.2 kB 19.7 MB/s eta 0:00:00
Collecting configobj>=5.0.6
  Downloading configobj-5.0.8-py2.py3-none-any.whl (36 kB)
Collecting prompt-toolkit<4.0.0,>=2.0.6
  Downloading prompt_toolkit-3.0.43-py3-none-any.whl (386 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 386.1/386.1 kB 19.8 MB/s eta 0:00:00
Collecting tabulate[widechars]>=0.8.2
  Downloading tabulate-0.9.0-py3-none-any.whl (35 kB)
Collecting six
  Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting python-dateutil>=2.6
  Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 247.7/247.7 kB 14.0 MB/s eta 0:00:00
Collecting time-machine>=2.6.0
  Downloading time_machine-2.13.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34 kB)
Collecting tzdata>=2020.1
  Downloading tzdata-2023.4-py2.py3-none-any.whl (346 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 346.6/346.6 kB 18.4 MB/s eta 0:00:00
Collecting wcwidth
  Downloading wcwidth-0.2.13-py2.py3-none-any.whl (34 kB)
Collecting typing-extensions>=4.1
  Downloading typing_extensions-4.9.0-py3-none-any.whl (32 kB)
Installing collected packages: wcwidth, tzdata, typing-extensions, tabulate, sqlparse, six, setproctitle, Pygments, prompt-toolkit, click, python-dateutil, psycopg, configobj, time-machine, pgspecial, cli-helpers, pendulum, pgcli
Successfully installed Pygments-2.17.2 cli-helpers-2.3.0 click-8.1.7 configobj-5.0.8 pendulum-3.0.0 pgcli-4.0.1 pgspecial-2.1.1 prompt-toolkit-3.0.43 psycopg-3.1.17 python-dateutil-2.8.2 setproctitle-1.3.3 six-1.16.0 sqlparse-0.4.4 tabulate-0.9.0 time-machine-2.13.0 typing-extensions-4.9.0 tzdata-2023.4 wcwidth-0.2.13
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 23.3.2
[notice] To update, run: pip install --upgrade pip
root@e69684e887f9:/# pgcli --help
Usage: pgcli [OPTIONS] [DBNAME] [USERNAME]

Options:
  -h, --host TEXT         Host address of the postgres database.
  -p, --port INTEGER      Port number at which the postgres instance is
                          listening.
  -U, --username TEXT     Username to connect to the postgres database.
  -u, --user TEXT         Username to connect to the postgres database.
  -W, --password          Force password prompt.
  -w, --no-password       Never prompt for password.
  --single-connection     Do not use a separate connection for completions.
  -v, --version           Version of pgcli.
  -d, --dbname TEXT       database name to connect to.
  --pgclirc FILE          Location of pgclirc file.
  -D, --dsn TEXT          Use DSN configured into the [alias_dsn] section of
                          pgclirc file.
  --list-dsn              list of DSN configured into the [alias_dsn] section
                          of pgclirc file.
  --row-limit INTEGER     Set threshold for row limit prompt. Use 0 to disable
                          prompt.
  --less-chatty           Skip intro on startup and goodbye on exit.
  --prompt TEXT           Prompt format (Default: "\u@\h:\d> ").
  --prompt-dsn TEXT       Prompt format for connections using DSN aliases
                          (Default: "\u@\h:\d> ").
  -l, --list              list available databases, then exit.
  --auto-vertical-output  Automatically switch to vertical output mode if the
                          result is wider than the terminal width.
  --warn TEXT             Warn before running a destructive query.
  --ssh-tunnel TEXT       Open an SSH tunnel to the given address and connect
                          to the database from it.
  --help                  Show this message and exit.
root@e69684e887f9:/# pgcli -h localhost -p 5432 -u root -d ny_taxi
connection is bad: :1", port 5432 failed: Cannot assign requested address
        Is the server running on that host and accepting TCP/IP connections?
root@e69684e887f9:/# docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
  -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
  -p 5432:5432 \
  postgres:13
bash: docker: command not found
root@e69684e887f9:/# read escape sequence

  bash MEM: 33.54% | 2/7GB   20m 0s 430ms                                                                                                 main ≡  ?2 
╭─ ♥ 18:02 | workspaces  data-engineering-zoomcamp 
╰─ docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
  -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
  -p 5432:5432 \
  postgres:13
Unable to find image 'postgres:13' locally
13: Pulling from library/postgres
2f44b7a888fa: Pulling fs layer 
a7f35665fcb5: Pulling fs layer 
084e7cac132b: Pulling fs layer 
3dfd9d3ef559: Pulling fs layer 
f9a86bb2457f: Pulling fs layer 
fe977d323b28: Pulling fs layer 
683d6af0b661: Pull complete 
9d6cf683eb24: Pull complete 
e3dde9f5a40c: Pull complete 
0c6134ad6fc1: Pull complete 
b1aae309429c: Pull complete 
b9fca0bb2c78: Pull complete 
a7ce99218bd0: Pull complete 
79e76ae8b2b7: Pull complete 
Digest: sha256:f45fd21264472523c7a8918cce05a81febac1ca0d33bb45529f8b819a877eb80
Status: Downloaded newer image for postgres:13
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.utf8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/data ... ok
creating subdirectories ... ok
selecting dynamic shared memory implementation ... posix
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting default time zone ... Etc/UTC
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... ok
syncing data to disk ... ok

initdb: warning: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    pg_ctl -D /var/lib/postgresql/data -l logfile start

waiting for server to start....2024-01-29 22:03:06.592 UTC [49] LOG:  starting PostgreSQL 13.13 (Debian 13.13-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
2024-01-29 22:03:06.602 UTC [49] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2024-01-29 22:03:06.633 UTC [50] LOG:  database system was shut down at 2024-01-29 22:03:04 UTC
2024-01-29 22:03:06.649 UTC [49] LOG:  database system is ready to accept connections
 done
server started
CREATE DATABASE


/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*

waiting for server to shut down....2024-01-29 22:03:07.588 UTC [49] LOG:  received fast shutdown request
2024-01-29 22:03:07.600 UTC [49] LOG:  aborting any active transactions
2024-01-29 22:03:07.607 UTC [49] LOG:  background worker "logical replication launcher" (PID 56) exited with exit code 1
2024-01-29 22:03:07.612 UTC [51] LOG:  shutting down
2024-01-29 22:03:07.674 UTC [49] LOG:  database system is shut down
 done
server stopped

PostgreSQL init process complete; ready for start up.

2024-01-29 22:03:07.732 UTC [1] LOG:  starting PostgreSQL 13.13 (Debian 13.13-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
2024-01-29 22:03:07.732 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
2024-01-29 22:03:07.732 UTC [1] LOG:  listening on IPv6 address "::", port 5432
2024-01-29 22:03:07.752 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2024-01-29 22:03:07.773 UTC [64] LOG:  database system was shut down at 2024-01-29 22:03:07 UTC
2024-01-29 22:03:07.793 UTC [1] LOG:  database system is ready to accept connections
2024-01-29 22:03:18.854 UTC [71] LOG:  invalid length of startup packet
2024-01-29 22:03:18.880 UTC [72] LOG:  invalid length of startup packet
2024-01-29 22:03:18.898 UTC [73] LOG:  invalid length of startup packet
2024-01-29 22:03:18.916 UTC [74] LOG:  invalid length of startup packet
docker attach --detach-keys="ctrl-a,ctrl-x" e69684e887f9
exit()
2024-01-29 22:06:28.399 UTC [1] LOG:  received fast shutdown request
2024-01-29 22:06:28.409 UTC [1] LOG:  aborting any active transactions
2024-01-29 22:06:28.418 UTC [1] LOG:  background worker "logical replication launcher" (PID 70) exited with exit code 1
2024-01-29 22:06:28.420 UTC [65] LOG:  shutting down
2024-01-29 22:06:28.504 UTC [1] LOG:  database system is shut down

  bash MEM: 33.24% | 2/7GB   3m 37s 998ms                                                                                                 main ≡  ?2 
╭─ ♥ 18:06 | workspaces  data-engineering-zoomcamp 
╰─ docker ps
CONTAINER ID   IMAGE        COMMAND   CREATED          STATUS          PORTS     NAMES
e69684e887f9   python:3.9   "bash"    34 minutes ago   Up 34 minutes             priceless_gould

  bash MEM: 33.28% | 2/7GB   22ms                                                                                                         main ≡  ?2 
╭─ ♥ 18:06 | workspaces  data-engineering-zoomcamp 
╰─ pgcli -h localhost -p 5432 -u root -d ny_taxi
bash: pgcli: command not found

  bash MEM: 34.16% | 2/7GB   9ms                                                                                                          main ≡  ?2 
╭─ ♥ 18:07 | workspaces  data-engineering-zoomcamp 
╰─ docker attach --detach-keys="ctrl-a,ctrl-x" e69684e887f9

  bash MEM: 33.55% | 2/7GB   1m 0s 866ms                                                                                                  main ≡  ?2 
╭─ ♥ 18:09 | workspaces  data-engineering-zoomcamp 
╰─ docker

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., 0.12.1-1)
  compose*    Docker Compose (Docker Inc., 2.23.3-1)
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/home/vscode/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/vscode/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/vscode/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/vscode/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

  bash MEM: 33.66% | 2/7GB   288ms                                                                                                        main ≡  ?2 
╭─ ♥ 18:09 | workspaces  data-engineering-zoomcamp 
╰─ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

  bash MEM: 33.59% | 2/7GB   22ms                                                                                                         main ≡  ?2 
╭─ ♥ 18:09 | workspaces  data-engineering-zoomcamp 
╰─ docker run -itd --entrypoint=bash python:3.9
d715669eeef8bddc986d61d69b9f3be2da481d3ebad4bdedbf5779cd7d76ab62

  bash MEM: 33.66% | 2/7GB   676ms                                                                                                        main ≡  ?2 
╭─ ♥ 18:10 | workspaces  data-engineering-zoomcamp 
╰─ docker ps
CONTAINER ID   IMAGE        COMMAND   CREATED          STATUS          PORTS     NAMES
d715669eeef8   python:3.9   "bash"    18 seconds ago   Up 17 seconds             youthful_bouman

  bash MEM: 33.1% | 2/7GB   21ms                                                                                                          main ≡  ?2 
╭─ ♥ 18:10 | workspaces  data-engineering-zoomcamp 
╰─ docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
  -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
  -p 5432:5432 \
  postgres:13
The files belonging to this database system will be owned by user "postgres".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.utf8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

fixing permissions on existing directory /var/lib/postgresql/data ... ok
creating subdirectories ... ok
selecting dynamic shared memory implementation ... posix
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting default time zone ... Etc/UTC
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... ok
syncing data to disk ... ok

initdb: warning: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    pg_ctl -D /var/lib/postgresql/data -l logfile start

waiting for server to start....2024-01-29 22:17:46.984 UTC [48] LOG:  starting PostgreSQL 13.13 (Debian 13.13-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
2024-01-29 22:17:46.994 UTC [48] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2024-01-29 22:17:47.025 UTC [49] LOG:  database system was shut down at 2024-01-29 22:17:44 UTC
2024-01-29 22:17:47.040 UTC [48] LOG:  database system is ready to accept connections
 done
server started
CREATE DATABASE


/usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*

2024-01-29 22:17:47.961 UTC [48] LOG:  received fast shutdown request
waiting for server to shut down....2024-01-29 22:17:47.972 UTC [48] LOG:  aborting any active transactions
2024-01-29 22:17:47.975 UTC [48] LOG:  background worker "logical replication launcher" (PID 55) exited with exit code 1
2024-01-29 22:17:47.982 UTC [50] LOG:  shutting down
2024-01-29 22:17:48.049 UTC [48] LOG:  database system is shut down
 done
server stopped

PostgreSQL init process complete; ready for start up.

2024-01-29 22:17:48.114 UTC [1] LOG:  starting PostgreSQL 13.13 (Debian 13.13-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
2024-01-29 22:17:48.115 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
2024-01-29 22:17:48.116 UTC [1] LOG:  listening on IPv6 address "::", port 5432
2024-01-29 22:17:48.142 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2024-01-29 22:17:48.165 UTC [63] LOG:  database system was shut down at 2024-01-29 22:17:48 UTC
2024-01-29 22:17:48.180 UTC [1] LOG:  database system is ready to accept connections
exit()
